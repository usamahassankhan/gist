{"ast":null,"code":"var _jsxFileName = \"/home/usamahassankhan/test/gistapi/src/components/GistList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPublicGists } from \"../services/gistService\";\nimport { setGist, setSearch } from \"../redux/gistSlice\";\nimport styled from \"styled-components\";\nimport Gist from \"./Gist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GistList = () => {\n  _s();\n  const {\n    value,\n    searchValue,\n    notFound\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const getData = async () => {\n    try {\n      const res = await getPublicGists();\n      dispatch(setGist(res.data));\n    } catch (error) {\n      dispatch(setSearch([]));\n      dispatch(notFound(false));\n    }\n  };\n  //fetching  data\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // If No Data is available\n  if (notFound) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: \"Not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  //  Conditionally rendering data if any value in search otherwise show old data\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: searchValue.length > 0 ? searchValue.map(gist => /*#__PURE__*/_jsxDEV(Gist, {\n      gist: gist\n    }, gist.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 37\n    }, this)) : value.map(gist => /*#__PURE__*/_jsxDEV(Gist, {\n      gist: gist\n    }, gist.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 31\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(GistList, \"XKzJx7WaV2W5CSeF/6s/fE1Vzuc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = GistList;\nconst Container = styled.div`\n  height: calc(100vh - 68px);\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n`;\n_c2 = Container;\nexport default GistList;\nvar _c, _c2;\n$RefreshReg$(_c, \"GistList\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getPublicGists","setGist","setSearch","styled","Gist","jsxDEV","_jsxDEV","GistList","_s","value","searchValue","notFound","state","user","dispatch","getData","res","data","error","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","gist","id","_c","div","_c2","$RefreshReg$"],"sources":["/home/usamahassankhan/test/gistapi/src/components/GistList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPublicGists } from \"../services/gistService\";\nimport { setGist, setSearch } from \"../redux/gistSlice\";\nimport styled from \"styled-components\";\nimport Gist from \"./Gist\";\n\nconst GistList = () => {\n  const { value, searchValue, notFound } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const getData = async () => {\n    try {\n      const res = await getPublicGists();\n      dispatch(setGist(res.data));\n    } catch (error) {\n      dispatch(setSearch([]));\n      dispatch(notFound(false));\n    }\n    \n  };\n  //fetching  data\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // If No Data is available\n  if (notFound) {\n    return <Container>Not found</Container>;\n  }\n\n  //  Conditionally rendering data if any value in search otherwise show old data\n  return (\n    <Container>\n      {searchValue.length > 0\n        ? searchValue.map((gist) => <Gist key={gist.id} gist={gist} />)\n        : value.map((gist) => <Gist key={gist.id} gist={gist} />)}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  height: calc(100vh - 68px);\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n`;\n\nexport default GistList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,OAAO,EAAEC,SAAS,QAAQ,oBAAoB;AACvD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAC3E,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMhB,cAAc,CAAC,CAAC;MAClCc,QAAQ,CAACb,OAAO,CAACe,GAAG,CAACC,IAAI,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,QAAQ,CAACZ,SAAS,CAAC,EAAE,CAAC,CAAC;MACvBY,QAAQ,CAACH,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3B;EAEF,CAAC;EACD;EACAd,SAAS,CAAC,MAAM;IACdkB,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIJ,QAAQ,EAAE;IACZ,oBAAOL,OAAA,CAACa,SAAS;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EACzC;;EAEA;EACA,oBACElB,OAAA,CAACa,SAAS;IAAAC,QAAA,EACPV,WAAW,CAACe,MAAM,GAAG,CAAC,GACnBf,WAAW,CAACgB,GAAG,CAAEC,IAAI,iBAAKrB,OAAA,CAACF,IAAI;MAAeuB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC,GAC7Df,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBAAKrB,OAAA,CAACF,IAAI;MAAeuB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEhB,CAAC;AAAChB,EAAA,CAhCID,QAAQ;EAAA,QAC6BR,WAAW,EACnCD,WAAW;AAAA;AAAA+B,EAAA,GAFxBtB,QAAQ;AAkCd,MAAMY,SAAS,GAAGhB,MAAM,CAAC2B,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIZ,SAAS;AAUf,eAAeZ,QAAQ;AAAC,IAAAsB,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}